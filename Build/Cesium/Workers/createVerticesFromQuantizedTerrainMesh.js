define(["./AttributeCompression-16430ee7","./EllipsoidTangentPlane-e12285fe","./buildModuleUrl-d920237a","./Cartesian2-2b41fabe","./Cartographic-1d953166","./when-d186add7","./Rectangle-f841217d","./TerrainEncoding-54acbe88","./IndexDatatype-61ffec74","./Math-7f5f2992","./FeatureDetection-4281d393","./OrientedBoundingBox-9c607ea0","./Check-2514d21d","./GeometryAttribute-95780fd1","./WebMercatorProjection-af624514","./createTaskProcessorWorker","./Cartesian4-3408960c","./IntersectionTests-300d4352","./Plane-d9914d3c","./Event-50568704","./RuntimeError-4a74cd1a","./ComponentDatatype-07894a2b","./WebGLConstants-8d1e45f7","./PolygonPipeline-6809c3ce","./EllipsoidRhumbLine-394d2834","./Buffer-455831f6","./Color-2b4500b6","./BoundingRectangle-1d700ce8"],(function(t,e,r,n,i,o,a,s,h,d,c,u,l,I,m,g,T,y,f,v,w,E,p,N,b,S,A,x){"use strict";function _(){l.t.throwInstantiationError()}Object.defineProperties(_.prototype,{errorEvent:{get:l.t.throwInstantiationError},credit:{get:l.t.throwInstantiationError},tilingScheme:{get:l.t.throwInstantiationError},ready:{get:l.t.throwInstantiationError},readyPromise:{get:l.t.throwInstantiationError},hasWaterMask:{get:l.t.throwInstantiationError},hasVertexNormals:{get:l.t.throwInstantiationError},availability:{get:l.t.throwInstantiationError}});var F=[];_.getRegularGridIndices=function(t,e){if(t*e>=d.e.FOUR_GIGABYTES)throw new l.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=F[t];o.e(r)||(F[t]=r=[]);var n=r[e];return o.e(n)||G(t,e,n=t*e<d.e.SIXTY_FOUR_KILOBYTES?r[e]=new Uint16Array((t-1)*(e-1)*6+3*(t+e-2)):r[e]=new Uint32Array((t-1)*(e-1)*6+3*(t+e-2)),0),n},_.getRegularGridIndicesForReproject=function(t,e){if(t*e>=d.e.FOUR_GIGABYTES)throw new l.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=F[t];o.e(r)||(F[t]=r=[]);var n=r[e];return o.e(n)||G(t,e,n=t*e<d.e.SIXTY_FOUR_KILOBYTES?r[e]=new Uint16Array((t-1)*(e-1)*6):r[e]=new Uint32Array((t-1)*(e-1)*6),0),n};var M=[];_.getRegularGridIndicesAndEdgeIndices=function(t,e){if(t*e>=d.e.FOUR_GIGABYTES)throw new l.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=M[t];o.e(r)||(M[t]=r=[]);var n=r[e];if(!o.e(n)){var i=_.getRegularGridIndices(t,e),a=B(t,e),s=a.westIndicesSouthToNorth,h=a.southIndicesEastToWest,c=a.eastIndicesNorthToSouth,u=a.northIndicesWestToEast;n=r[e]={indices:i,westIndicesSouthToNorth:s,southIndicesEastToWest:h,eastIndicesNorthToSouth:c,northIndicesWestToEast:u}}return n};var P=[];function B(t,e){var r,n=new Array(e),i=new Array(t),o=new Array(e),a=new Array(t);for(r=0;r<t;++r)a[r]=r,i[r]=t*e-1-r;for(r=0;r<e;++r)o[r]=(r+1)*t-1,n[r]=(e-r-1)*t;return{westIndicesSouthToNorth:n,southIndicesEastToWest:i,eastIndicesNorthToSouth:o,northIndicesWestToEast:a}}function G(t,e,r,n){for(var i=0,o=0;o<e-1;++o){for(var a=0;a<t-1;++a){var s=i,h=s+t,d=h+1,c=s+1;r[n++]=s,r[n++]=h,r[n++]=c,r[n++]=c,r[n++]=h,r[n++]=d,++i}++i}var u=(e-1)/2,l=(t-1)/2;i=0;for(a=0;a<l;a++)r[n++]=i,r[n++]=i+1,r[n++]=i+2,i+=2;i=t*(e-1);for(a=0;a<l;a++)r[n++]=i+1,r[n++]=i,r[n++]=i+2,i+=2;i=0;for(a=0;a<u;a++)r[n++]=i+t,r[n++]=i,r[n++]=i+2*t,i+=2*t;i=t-1;for(a=0;a<u;a++)r[n++]=i,r[n++]=i+t,r[n++]=i+2*t,i+=2*t}function W(t,e,r,n,i){for(var a=o.e(i),s=t[0],h=t.length,d=1;d<h;++d){var c=t[d];!a||i[s+"_"+c]?(r[n++]=s,r[n++]=c,r[n++]=e,r[n++]=e,r[n++]=c,r[n++]=e+1,s=c,++e):(s=c,++e)}return n}_.getRegularGridAndSkirtIndicesAndEdgeIndices=function(t,e){if(t*e>=d.e.FOUR_GIGABYTES)throw new l.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=P[t];o.e(r)||(P[t]=r=[]);var n=r[e];if(!o.e(n)){var i=t*e,a=(t-1)*(e-1)*6,s=2*t+2*e,c=i+s,u=3*(t+e-2),I=a+6*Math.max(0,s-4)+u,m=B(t,e),g=m.westIndicesSouthToNorth,T=m.southIndicesEastToWest,y=m.eastIndicesNorthToSouth,f=m.northIndicesWestToEast,v=h.IndexDatatype.createTypedArray(c,I);G(t,e,v,0),_.addSkirtIndices(g,T,y,f,i,v,a+u),n=r[e]={indices:v,westIndicesSouthToNorth:g,southIndicesEastToWest:T,eastIndicesNorthToSouth:y,northIndicesWestToEast:f,indexCountWithoutSkirts:a}}return n},_.addSkirtIndices=function(t,e,r,n,i,o,a,s){var h=i;a=W(t,h,o,a,s),a=W(e,h+=t.length,o,a,s),a=W(r,h+=e.length,o,a,s),W(n,h+=r.length,o,a,s)},_.heightmapTerrainQuality=.25,_.getEstimatedLevelZeroGeometricErrorForAHeightmap=function(t,e,r){return 2*t.maximumRadius*Math.PI*_.heightmapTerrainQuality/(e*r)},_.prototype.requestTileGeometry=l.t.throwInstantiationError,_.prototype.getLevelMaximumGeometricError=l.t.throwInstantiationError,_.prototype.getTileDataAvailable=l.t.throwInstantiationError,_.prototype.loadTileDataAvailability=l.t.throwInstantiationError;var C=32767,O=new i.t,R=new i.t,Y=new i.t,k=new i.t$1,H=new n.o,V=new i.t,U=new c.y,z=new c.y;function L(t,e,r,n,o,a,s,h,u){var l=Number.POSITIVE_INFINITY,I=o.north,m=o.south,g=o.east,T=o.west;g<T&&(g+=d.e.TWO_PI);for(var y=t.length,f=0;f<y;++f){var v=t[f],w=r[v],E=n[v];k.longitude=d.e.lerp(T,g,E.x),k.latitude=d.e.lerp(m,I,E.y),k.height=w-e;var p=a.cartographicToCartesian(k,O);c.y.multiplyByPoint(s,p,p),i.t.minimumByComponent(p,h,h),i.t.maximumByComponent(p,u,u),l=Math.min(l,k.height)}return l}function D(e,r,n,a,s,h,u,l,g,T,y,f,v,w,E){var p=o.e(u),N=g.north,b=g.south,S=g.east,A=g.west;S<A&&(S+=d.e.TWO_PI);for(var x=n.length,_=0;_<x;++_){var F=n[_],M=s[F],P=h[F];k.longitude=d.e.lerp(A,S,P.x)+w,k.latitude=d.e.lerp(b,N,P.y)+E,k.height=M-T;var B,G=l.cartographicToCartesian(k,O);if(p){var W=2*F;if(H.x=u[W],H.y=u[W+1],1!==y){var C=t.t.octDecode(H.x,H.y,V),R=I.m.eastNorthUpToFixedFrame(O,l,z),Y=c.y.inverseTransformation(R,U);c.y.multiplyByPointAsVector(Y,C,C),C.z*=y,i.t.normalize(C,C),c.y.multiplyByPointAsVector(R,C,C),i.t.normalize(C,C),t.t.octEncode(C,H)}}a.hasWebMercatorT&&(B=(m.t.geodeticLatitudeToMercatorAngle(k.latitude)-f)*v),r=a.encode(e,r,G,P,k.height,H,B)}}function j(t,e){var r;return"function"==typeof t.slice&&"function"!=typeof(r=t.slice()).sort&&(r=void 0),o.e(r)||(r=Array.prototype.slice.call(t)),r.sort(e),r}var q=g((function(l,g){var T,y,f=l.quantizedVertices,v=f.length/3,w=l.octEncodedNormals,E=l.westIndices.length+l.eastIndices.length+l.southIndices.length+l.northIndices.length,p=l.includeWebMercatorT,N=a.h.clone(l.rectangle),b=N.west,S=N.south,A=N.east,x=N.north,F=a.t.clone(l.ellipsoid),M=l.exaggeration,P=l.minimumHeight*M,B=l.maximumHeight*M,G=o.e(l.validMinimumHeight)?l.validMinimumHeight*M:P*M,W=o.e(l.validMaximumHeight)?l.validMaximumHeight*M:B*M,q=l.relativeToCenter,K=I.m.eastNorthUpToFixedFrame(q,F),Q=c.y.inverseTransformation(K,new c.y);p&&(T=m.t.geodeticLatitudeToMercatorAngle(S),y=1/(m.t.geodeticLatitudeToMercatorAngle(x)-T));var X=f.subarray(0,v),Z=f.subarray(v,2*v),$=f.subarray(2*v,3*v),J=o.e(w),tt=new Array(v),et=new Array(v),rt=new Array(v),nt=p?new Array(v):[],it=R;it.x=Number.POSITIVE_INFINITY,it.y=Number.POSITIVE_INFINITY,it.z=Number.POSITIVE_INFINITY;var ot=Y;ot.x=Number.NEGATIVE_INFINITY,ot.y=Number.NEGATIVE_INFINITY,ot.z=Number.NEGATIVE_INFINITY;for(var at=Number.POSITIVE_INFINITY,st=Number.NEGATIVE_INFINITY,ht=Number.POSITIVE_INFINITY,dt=Number.NEGATIVE_INFINITY,ct=0;ct<v;++ct){var ut=X[ct],lt=Z[ct],It=ut/C,mt=lt/C,gt=d.e.lerp(P,B,$[ct]/C);k.longitude=d.e.lerp(b,A,It),k.latitude=d.e.lerp(S,x,mt),k.height=gt,at=Math.min(k.longitude,at),st=Math.max(k.longitude,st),ht=Math.min(k.latitude,ht),dt=Math.max(k.latitude,dt);var Tt=F.cartographicToCartesian(k);tt[ct]=new n.o(It,mt),et[ct]=gt,rt[ct]=Tt,p&&(nt[ct]=(m.t.geodeticLatitudeToMercatorAngle(k.latitude)-T)*y),c.y.multiplyByPoint(Q,Tt,O),i.t.minimumByComponent(O,it,it),i.t.maximumByComponent(O,ot,ot)}var yt,ft,vt=j(l.westIndices,(function(t,e){return tt[t].y-tt[e].y})),wt=j(l.eastIndices,(function(t,e){return tt[e].y-tt[t].y})),Et=j(l.southIndices,(function(t,e){return tt[e].x-tt[t].x})),pt=j(l.northIndices,(function(t,e){return tt[t].x-tt[e].x}));ft=r.i.fromPoints(rt),yt=u.x.fromRectangle(N,P,B,F);var Nt,bt=u.x.fromRectangle(N,G,W,F);(1!==M||P<0)&&(Nt=new s.s(F).computeHorizonCullingPointPossiblyUnderEllipsoid(q,rt,P));var St=P;St=Math.min(St,L(l.westIndices,l.westSkirtHeight,et,tt,N,F,Q,it,ot)),St=Math.min(St,L(l.southIndices,l.southSkirtHeight,et,tt,N,F,Q,it,ot)),St=Math.min(St,L(l.eastIndices,l.eastSkirtHeight,et,tt,N,F,Q,it,ot)),St=Math.min(St,L(l.northIndices,l.northSkirtHeight,et,tt,N,F,Q,it,ot));for(var At=new e.e(it,ot,q),xt=new s.h(At,St,B,K,J,p),_t=xt.getStride(),Ft=new Float32Array(v*_t+E*_t),Mt=0,Pt=0;Pt<v;++Pt){if(J){var Bt=2*Pt;if(H.x=w[Bt],H.y=w[Bt+1],1!==M){var Gt=t.t.octDecode(H.x,H.y,V),Wt=I.m.eastNorthUpToFixedFrame(rt[Pt],F,z),Ct=c.y.inverseTransformation(Wt,U);c.y.multiplyByPointAsVector(Ct,Gt,Gt),Gt.z*=M,i.t.normalize(Gt,Gt),c.y.multiplyByPointAsVector(Wt,Gt,Gt),i.t.normalize(Gt,Gt),t.t.octEncode(Gt,H)}}Mt=xt.encode(Ft,Mt,rt[Pt],tt[Pt],et[Pt],H,nt[Pt])}var Ot=Math.max(0,2*(E-4)),Rt=l.indices.length+3*Ot,Yt=h.IndexDatatype.createTypedArray(v+E,Rt);Yt.set(l.indices,0);var kt=1e-4,Ht=(st-at)*kt,Vt=(dt-ht)*kt,Ut=-Ht,zt=Ht,Lt=Vt,Dt=-Vt,jt=v*_t;D(Ft,jt,vt,xt,et,tt,w,F,N,l.westSkirtHeight,M,T,y,Ut,0),D(Ft,jt+=l.westIndices.length*_t,Et,xt,et,tt,w,F,N,l.southSkirtHeight,M,T,y,0,Dt),D(Ft,jt+=l.southIndices.length*_t,wt,xt,et,tt,w,F,N,l.eastSkirtHeight,M,T,y,zt,0),D(Ft,jt+=l.eastIndices.length*_t,pt,xt,et,tt,w,F,N,l.northSkirtHeight,M,T,y,0,Lt);var qt=function(t,e,r,n){if(n<12)return;for(var i={},o=t.length,a=0;a<o;a+=3){var s=t[a],h=t[a+1],d=t[a+2];(e[s]===C&&e[h]===C||0===e[s]&&0===e[h]||r[s]===C&&r[h]===C||0===r[s]&&0===r[h])&&(i[s+"_"+h]=1,i[h+"_"+s]=1),(e[h]===C&&e[d]===C||0===e[h]&&0===e[d]||r[h]===C&&r[d]===C||0===r[h]&&0===r[d])&&(i[h+"_"+d]=1,i[d+"_"+h]=1),(e[d]===C&&e[s]===C||0===e[d]&&0===e[s]||r[d]===C&&r[s]===C||0===r[d]&&0===r[s])&&(i[d+"_"+s]=1,i[s+"_"+d]=1)}return i}(l.indices,X,Z,l.level);return _.addSkirtIndices(vt,Et,wt,pt,v,Yt,l.indices.length,qt),g.push(Ft.buffer,Yt.buffer),{vertices:Ft.buffer,indices:Yt.buffer,westIndicesSouthToNorth:vt,southIndicesEastToWest:Et,eastIndicesNorthToSouth:wt,northIndicesWestToEast:pt,vertexStride:_t,center:q,minimumHeight:P,maximumHeight:B,boundingSphere:ft,orientedBoundingBox:yt,validOrientedBoundingBox:bt,occludeePointInScaledSpace:Nt,encoding:xt,indexCountWithoutSkirts:l.indices.length}}));return q}));
