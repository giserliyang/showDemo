define(["./when-d186add7","./Rectangle-f841217d","./arrayRemoveDuplicates-74caa2f4","./BoundingRectangle-1d700ce8","./buildModuleUrl-d920237a","./Cartesian2-2b41fabe","./Cartographic-1d953166","./ComponentDatatype-07894a2b","./PolylineVolumeGeometryLibrary-33dc94e9","./Check-2514d21d","./GeometryAttribute-95780fd1","./GeometryAttributes-9c67dd14","./GeometryPipeline-6f0b08bc","./IndexDatatype-61ffec74","./Math-7f5f2992","./PolygonPipeline-6809c3ce","./FeatureDetection-4281d393","./VertexFormat-769ac289","./Event-50568704","./RuntimeError-4a74cd1a","./WebGLConstants-8d1e45f7","./Cartesian4-3408960c","./EllipsoidTangentPlane-e12285fe","./IntersectionTests-300d4352","./Plane-d9914d3c","./PolylinePipeline-cea0bf86","./EllipsoidGeodesic-fc4b25bd","./EllipsoidRhumbLine-394d2834","./AttributeCompression-16430ee7","./EncodedCartesian3-e527b85b"],(function(e,t,n,o,r,i,a,s,p,c,l,u,d,h,y,g,m,f,v,b,k,_,P,L,w,C,E,A,D,T){"use strict";function F(n){var o=(n=e.u(n,e.u.EMPTY_OBJECT)).polylinePositions,r=n.shapePositions;if(!e.e(o))throw new c.t("options.polylinePositions is required.");if(!e.e(r))throw new c.t("options.shapePositions is required.");this._positions=o,this._shape=r,this._ellipsoid=t.t.clone(e.u(n.ellipsoid,t.t.WGS84)),this._cornerType=e.u(n.cornerType,p.S.ROUNDED),this._vertexFormat=f.n.clone(e.u(n.vertexFormat,f.n.DEFAULT)),this._granularity=e.u(n.granularity,y.e.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry",this.enuCenter=e.u(n.enuCenter,a.t.ZERO);var s=1+o.length*a.t.packedLength;s+=1+r.length*i.o.packedLength+a.t.packedLength,this.packedLength=s+t.t.packedLength+f.n.packedLength+2}F.pack=function(n,o,r){if(!e.e(n))throw new c.t("value is required");if(!e.e(o))throw new c.t("array is required");r=e.u(r,0);var s,p=n._positions,l=p.length;for(o[r++]=l,s=0;s<l;++s,r+=a.t.packedLength)a.t.pack(p[s],o,r);var u=n._shape;for(l=u.length,o[r++]=l,s=0;s<l;++s,r+=i.o.packedLength)i.o.pack(u[s],o,r);return t.t.pack(n._ellipsoid,o,r),r+=t.t.packedLength,f.n.pack(n._vertexFormat,o,r),r+=f.n.packedLength,o[r++]=n._cornerType,o[r++]=n._granularity,a.t.pack(n.enuCenter,o,r),o};var R=t.t.clone(t.t.UNIT_SPHERE),G=new f.n,x={polylinePositions:void 0,shapePositions:void 0,ellipsoid:R,vertexFormat:G,cornerType:void 0,granularity:void 0,enuCenter:void 0};F.unpack=function(n,o,r){if(!e.e(n))throw new c.t("array is required");o=e.u(o,0);var s,p=n[o++],l=new Array(p);for(s=0;s<p;++s,o+=a.t.packedLength)l[s]=a.t.unpack(n,o);p=n[o++];var u=new Array(p);for(s=0;s<p;++s,o+=i.o.packedLength)u[s]=i.o.unpack(n,o);var d=t.t.unpack(n,o,R);o+=t.t.packedLength;var h=f.n.unpack(n,o,G);o+=f.n.packedLength;var y,g=n[o++],m=n[o++];return y=a.t.unpack(n,o),e.e(r)?(r._positions=l,r._shape=u,r._ellipsoid=t.t.clone(d,r._ellipsoid),r._vertexFormat=f.n.clone(h,r._vertexFormat),r._cornerType=g,r._granularity=m,r.enuCenter=y,r):(x.polylinePositions=l,x.shapePositions=u,x.cornerType=g,x.granularity=m,x.enuCenter=y,new F(x))};var O=new o.f;return F.createGeometry=function(t){for(var i=t._positions,c=n.D(i,a.t.equalsEpsilon),y=c.length,f=new Array(y),v=0;v<y;v++)f[v]=a.t.clone(c[v]);var b=t._shape;if(b=p.J.removeDuplicatesFromShape(b),!(c.length<2||b.length<3)){g.A.computeWindingOrder2D(b)===g.W.CLOCKWISE&&b.reverse();var k=o.f.fromPoints(b,O),_={};if(_.combinedPositions=p.J.computePositions(f,b,k,t,!0),!a.t.equals(t.enuCenter,a.t.ZERO)){var P=new Array(y);for(v=0;v<y;v++)P[v]=a.t.clone(c[v]);_.combinedLocalPositions=p.J.computeLocalPositions(P,b,k,t,!0,t.enuCenter)}return function(t,n,o,i){var a=t.combinedPositions,p=t.combinedLocalPositions,c=new u.a;i.position&&(c.position=new l.o({componentDatatype:s.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:a}));var y,f,v,b,k,_,P=n.length,L=a.length/3,w=(L-2*P)/(2*P),C=g.A.triangulate(n),E=(w-1)*P*6+2*C.length,A=h.IndexDatatype.createTypedArray(L,E),D=2*P,T=0;for(y=0;y<w-1;y++){for(f=0;f<P-1;f++)_=(v=2*f+y*P*2)+D,k=(b=v+1)+D,A[T++]=b,A[T++]=v,A[T++]=k,A[T++]=k,A[T++]=v,A[T++]=_;k=(b=1+(v=2*P-2+y*P*2))+D,_=v+D,A[T++]=b,A[T++]=v,A[T++]=k,A[T++]=k,A[T++]=v,A[T++]=_}if(i.st||i.tangent||i.bitangent){var F,R,G=new Float32Array(2*L),x=1/(w-1),O=1/o.height,I=o.height/2,S=0;for(y=0;y<w;y++){for(F=y*x,R=O*(n[0].y+I),G[S++]=F,G[S++]=R,f=1;f<P;f++)R=O*(n[f].y+I),G[S++]=F,G[S++]=R,G[S++]=F,G[S++]=R;R=O*(n[0].y+I),G[S++]=F,G[S++]=R}for(f=0;f<P;f++)F=0,R=O*(n[f].y+I),G[S++]=F,G[S++]=R;for(f=0;f<P;f++)F=(w-1)*x,R=O*(n[f].y+I),G[S++]=F,G[S++]=R;c.st=new l.o({componentDatatype:s.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:new Float32Array(G)})}var q=L-2*P;for(y=0;y<C.length;y+=3){var N=C[y]+q,U=C[y+1]+q,W=C[y+2]+q;A[T++]=N,A[T++]=U,A[T++]=W,A[T++]=W+P,A[T++]=U+P,A[T++]=N+P}var B=new l.I({attributes:c,indices:A,boundingSphere:r.i.fromVertices(a),primitiveType:m._0x12cc5d.TRIANGLES});if(i.normal&&(B=d.k.computeNormal(B)),i.tangent||i.bitangent){try{B=d.k.computeTangentAndBitangent(B)}catch(e){r.e("polyline-volume-tangent-bitangent","Unable to compute tangents and bitangents for polyline volume geometry")}i.tangent||(B.attributes.tangent=void 0),i.bitangent||(B.attributes.bitangent=void 0),i.st||(B.attributes.st=void 0)}return e.e(p)&&(B.attributes.position.values=p,B.attributes.position.componentDatatype=s.ComponentDatatype.FLOAT),B}(_,b,k,t._vertexFormat)}},function(n,o){return e.e(o)&&(n=F.unpack(n,o)),n._ellipsoid=t.t.clone(n._ellipsoid),F.createGeometry(n)}}));
